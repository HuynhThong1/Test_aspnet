@model PaginatedList<FGW_Management.Models.FGW_User>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Index";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-area="" asp-controller="Home">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">User List</li>
    </ol>
</nav>

<h2>User List</h2>

<!--ID="txtInput" onkeyup="locdau(this);"-->

<form asp-action="Index" method="get" class="mb-3">
    <div class="d-flex">
        <div class="p-2">
            <a class="ml-auto btn btn-outline-primary" asp-area="Identity" asp-page="/Account/Register"><i class="fas fa-user-plus"></i> Create new</a>
        </div>
        <div class="ml-auto p-2">
            Search user: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <button class="btn btn-default" type="submit"><i class="fas fa-search"></i></button>
            <a asp-action="Index" class="btn btn-default"><i class="fas fa-undo-alt"></i></a>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr class="table-primary">
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["UserSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">User Name</a>
            </th>
            <th class="d-none d-sm-table-cell">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">First Name</a>
            </th>
            <th class="d-none d-sm-table-cell">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th></th>
        </tr>
    </thead> 
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="">@Html.DisplayFor(modelItem => item.UserName)</a>
                </td>
                <td class="d-none d-sm-table-cell">
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td class="d-none d-sm-table-cell">
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td align="right">
                    <div class="btn-group">
                        <a asp-action="Assign" asp-route-id="@item.Id" class="btn btn-primary "><i class="fa fa-user-alt"></i></a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary "><i class="fa fa-user-edit"></i></a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="fa fa-user-alt-slash" style="color:white;"></i></a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{ var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; }
<div class="mb-3">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        <i class="fas fa-arrow-circle-left" style="font-size: 36px"></i>
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        <i class="fas fa-arrow-circle-right" style="font-size: 36px"></i>
    </a>
</div>


<script>
    function locdau(obj) {
        var str;
        if (eval(obj))
            str = eval(obj).value;
        else
            str = obj;
        str = str.toLowerCase();
        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
        str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
        str = str.replace(/đ/g, "d");
        str = str.replace(/^\-+|\-+$/g, "");
        eval(obj).value = str.toUpperCase();
    }
</script>

